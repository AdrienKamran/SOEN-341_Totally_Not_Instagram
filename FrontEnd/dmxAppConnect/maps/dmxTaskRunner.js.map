{"version":3,"sources":["core/taskRunner.js","components/task.js","modules/core.js","modules/console.js","modules/ajax.js"],"names":["dmx","TaskRunner","createClass","constructor","parent","this","data","output","get","name","hasOwnProperty","run","task","intern","self","Array","isArray","steps","Promise","reduce","step","resolve","reject","console","log","module","action","__modules","warn","Error","method","bind","options","then","runtime","set","requestUpdate","catch","_exec","parse","value","valueOf","indexOf","obj","slice","key","taskRunner","Component","initialData","$param","running","lastError","attributes","src","type","String","default","preload","Boolean","autorun","methods","param","events","start","Event","done","error","render","node","props","JSON","textContent","e","debug","update","info","dispatchEvent","err","message","Module","wait","delay","setTimeout","now","Date","toISOString","prompt","repeat","items","split","arr","i","push","each","index","exec","condition","if","else","setvalue","app","setsession","sessionStorage","setItem","stringify","getsession","getItem","removesession","removeItem","setstorage","localStorage","getstorage","removestorage","count","label","time","timeend","timeEnd","group","groupend","groupEnd","clear","url","xhr","XMLHttpRequest","onerror","onabort","ontimeout","onload","responseText","open","send"],"mappings":"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","file":"../dmxTaskRunner/dmxTaskRunner.js","sourcesContent":["dmx.TaskRunner = dmx.createClass({\r\n\r\n    constructor: function(parent) {\r\n        if (!(this instanceof dmx.TaskRunner)) {\r\n            return new dmx.TaskRunner(parent);\r\n        }\r\n\r\n        this.parent = parent;\r\n        this.data = {};\r\n        this.output = {};\r\n    },\r\n\r\n    get: function(name) {\r\n        if (this.data.hasOwnProperty(name)) {\r\n            return this.data[name];\r\n        }\r\n\r\n        if (this.parent) {\r\n            if (name == 'parent') {\r\n                return this.parent.data;\r\n            }\r\n\r\n            return this.parent.get(name);\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    run: function(task, intern) {\r\n        var self = this;\r\n\r\n        if (!Array.isArray(task.steps)) {\r\n            task.steps = [task.steps];\r\n        }\r\n\r\n        if (!intern) {\r\n            this.output = {};\r\n        }\r\n\r\n        return Promise.reduce(task.steps, function(data, step) {\r\n            return new Promise(function(resolve, reject) {\r\n\r\n                if (typeof step == 'string') {\r\n                    // load json\r\n                    console.log('LOAD step ' + step);\r\n                }\r\n\r\n                if (step.module && step.action) {\r\n                    return _exec(step);\r\n                }\r\n\r\n                return reject('Invalid step.');\r\n\r\n                function _exec(step) {\r\n                    var module = dmx.__modules[step.module];\r\n\r\n                    if (!module) {\r\n                        console.warn('Module \"' + step.module + '\" was not loaded.');\r\n                        throw new Error('Module \"' + step.module + '\" was not loaded.');\r\n                    }\r\n\r\n                    if (!module[step.action]) {\r\n                        console.warn('Action \"' + step.action + '\" was not found.');\r\n                        throw new Error('Action \"' + step.action + '\" was not found.');\r\n                    }\r\n\r\n                    var action = Promise.method(module[step.action].bind(self));\r\n\r\n                    action(step.options || {}, step.name).then(function(output) {\r\n                        if (step.output) {\r\n                            self.output[step.name] = output;\r\n                        }\r\n\r\n                        if (step.runtime && self.parent) {\r\n                            self.parent.set('data', self.output);\r\n                            dmx.requestUpdate();\r\n                        }\r\n                        \r\n                        self.data[step.name] = output;\r\n\r\n                        resolve(self.output);\r\n                    }).catch(reject);\r\n                }\r\n            });\r\n        }, this.output);\r\n    },\r\n\r\n    _exec: function(step) {\r\n        if (!step.module) return;\r\n        if (!step.action) return;\r\n\r\n        var module = dmx.__modules[step.module];\r\n\r\n        if (!module) {\r\n            throw new Error('Module \"' + step.module + '\" was not found.');\r\n        } else if (!module[step.action]) {\r\n            throw new Error('Action \"' + step.action + '\" was not found in module \"' + step.module + '\".');\r\n        }\r\n\r\n        var action = Promise.method(module[step.action].bind(this));\r\n\r\n        action(step.options || {}, step.name).then(function(output) {\r\n            if (step.output) this.output[step.name] = output;\r\n        });\r\n    },\r\n\r\n    parse: function(value) {\r\n        if (value == null) return value;\r\n\r\n        value = value.valueOf();\r\n\r\n        if (typeof value == 'object') {\r\n            var obj = value.slice ? [] : {};\r\n\r\n            for (var key in value) {\r\n                obj[key] = this.parse(value[key], this);\r\n            }\r\n\r\n            return obj;\r\n        }\r\n\r\n        if (typeof value == 'string' && value.indexOf('{{') != -1) {\r\n            return dmx.parse(value, this);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n});\r\n\r\ndmx.TaskRunner.run = function(task, data) {\r\n    taskRunner = new dmx.TaskRunner(data);\r\n    return taskRunner.run(task);\r\n};\r\n","dmx.Component('task', {\r\n\r\n    initialData: {\r\n        $param: null,\r\n        data: null,\r\n        running: false,\r\n        lastError: null\r\n    },\r\n\r\n    attributes: {\r\n        src: {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        preload: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        autorun: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        run: function(param) {\r\n            this.run(param);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        start: Event,\r\n        done: Event,\r\n        error: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        if (this.props.src) {\r\n            \r\n        } else {\r\n            try {\r\n                this.task = JSON.parse(node.textContent);\r\n                if (this.props.autorun) {\r\n                    this.run();\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                console.debug(node.textContent);\r\n            }\r\n        }\r\n    },\r\n\r\n    update: function(props) {\r\n        // nothing dynamic\r\n    },\r\n\r\n    run: function(param) {\r\n        if (this.task) {\r\n            if (this.data.running) {\r\n                console.info('Task ' + this.name + ' is already running.');\r\n                return;\r\n            }\r\n\r\n            this.set('running', true);\r\n            this.set('log', {});\r\n            this.set('$param', param);\r\n            this.set('lastError', null);\r\n\r\n            this.dispatchEvent('start');\r\n\r\n            dmx.TaskRunner.run(this.task, this).bind(this).then(function(data) {\r\n                this.set('running', false);\r\n                this.set('data', data);\r\n                this.dispatchEvent('done');\r\n            }).catch(function(err) {\r\n                this.set('running', false);\r\n                this.set('lastError', err && err.message);\r\n                this.dispatchEvent('error');\r\n            });\r\n        }\r\n    }\r\n\r\n});\r\n","dmx.Module('core', {\r\n\r\n    'wait': function(options) {\r\n        var delay = this.parse(options.delay);\r\n\r\n        if (typeof delay != 'number') {\r\n            throw new Error('Invalid delay for wait action.');\r\n        }\r\n\r\n        return new Promise(function(resolve) {\r\n            setTimeout(resolve, delay);\r\n        });\r\n    },\r\n\r\n    'now': function(options) {\r\n        return (new Date()).toISOString();\r\n    },\r\n\r\n    'prompt': function(options) {\r\n        return prompt(this.parse(options.message));\r\n    },\r\n\r\n    'repeat': function(options) {\r\n        var items = this.parse(options.repeat);\r\n\r\n        if (!items) return;\r\n\r\n        if (typeof items == 'boolean') {\r\n            items = items ? [0] : [];\r\n        } else if (typeof items == 'string') {\r\n            items = items.split(/\\s*,\\s*/);\r\n        } else if (typeof items == 'number') {\r\n            var arr = [];\r\n            for (var i = 0; i < items; i++) {\r\n                arr.push(i + 1);\r\n            }\r\n            items = arr;\r\n        }\r\n\r\n        if (typeof items != 'object') {\r\n            throw new Error('Repeater data is not repeatable.');\r\n        }\r\n\r\n        var self = this;\r\n        return Promise.each(items, function(value, index) {\r\n            return self.run(options.exec, true);\r\n        });\r\n\r\n        /*\r\n        var index = 0;\r\n        for (var key in items) {\r\n            var scope = {\r\n                $key: key,\r\n                $value: items[key],\r\n                $index: index\r\n            };\r\n\r\n            this.run(options.exec, true);\r\n\r\n            index++;\r\n        }\r\n        */\r\n    },\r\n\r\n    'condition': function(options) {\r\n        if (this.parse(options.if)) {\r\n            return this.run(options.then, true);\r\n        } else if (options.else) {\r\n            return this.run(options.else, true);\r\n        }\r\n    },\r\n\r\n    'setvalue': function(options) {\r\n        var key = this.parse(options.key);\r\n        var value = this.parse(options.value);\r\n\r\n        if (key && typeof key == 'string') {\r\n            dmx.app.set(key, value);\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    'setsession': function(options) {\r\n        var key = this.parse(options.key);\r\n        var value = this.parse(options.value);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('Key for setsession must be a string.');\r\n        }\r\n\r\n        sessionStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n\r\n    'getsession': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('Key for getsession must be a string.');\r\n        }\r\n\r\n        return JSON.parse(sessionStorage.getItem(key));\r\n    },\r\n\r\n    'removesession': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('Key for removesession must be a string.');\r\n        }\r\n\r\n        sessionStorage.removeItem(key);\r\n    },\r\n\r\n    'setstorage': function(options) {\r\n        var key = this.parse(options.key);\r\n        var value = this.parse(options.value);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('Key for setstorage must be a string.');\r\n        }\r\n\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n\r\n    'getstorage': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('Key for getstorage must be a string.');\r\n        }\r\n\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n\r\n    'removestorage': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('Key for removestorage must be a string.');\r\n        }\r\n\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n});","dmx.Module('console', {\r\n\r\n    'log': function(options) {\r\n        console.log(this.parse(options.message));\r\n    },\r\n\r\n    'info': function(options) {\r\n        console.info(this.parse(options.message));\r\n    },\r\n\r\n    'warn': function(options) {\r\n        console.warn(this.parse(options.message));\r\n    },\r\n\r\n    'error': function(options) {\r\n        console.error(this.parse(options.message));\r\n    },\r\n\r\n    'count': function(options) {\r\n        console.count(this.parse(options.label));\r\n    },\r\n\r\n    'time': function(options) {\r\n        console.time(this.parse(options.label));\r\n    },\r\n\r\n    'timeend': function(options) {\r\n        console.timeEnd(this.parse(options.label));\r\n    },\r\n\r\n    'group': function(options) {\r\n        console.group();\r\n    },\r\n\r\n    'groupend': function(options) {\r\n        console.groupEnd();\r\n    },\r\n\r\n    'clear': function(options) {\r\n        console.clear();\r\n    }\r\n\r\n});","dmx.Module('ajax', {\r\n\r\n    'get': function(options) {\r\n        var url = this.parse(options.url);\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n\r\n            xhr.onerror = reject;\r\n            xhr.onabort = reject;\r\n            xhr.ontimeout = reject;\r\n            xhr.onload = function() {\r\n                var data = JSON.parse(xhr.responseText);\r\n                resolve(data);\r\n            };\r\n\r\n            xhr.open('GET', url);\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n});"]}